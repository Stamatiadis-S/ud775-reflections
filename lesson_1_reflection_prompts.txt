How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It pointed the differences in a clean and easy to read manner.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    By giving me better control over the project and making understanding and
    debugging easier.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: - having a compact and meaningful version history
          - more flexibility
    Cons: - requires human judgement
          - chance for too big or small changes

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file
separately?

    Because they are designed for code where files are usually related or
    interconnected.

How can you use the commands git log and git diff to view the history of files?

    git log [--oneline] [--stat]
    git diff <File1_id> <File2_id>

How might using version control make you more confident to make changes that
could break something?

    By giving me the ability to revert back and fourth between version.

Now that you have your workspace set up, what do you want to try using Git for?

    Try experimenting with commits and branches.
